;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-lambda-reader.ss" "lang")((modname sol) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
;; AOC Day 3

(require 2htdp/batch-io)

(define input (map string->number (read-lines "input.txt")))

(define ex (read-lines "ex.txt"))


; num-list: String String -> [ListOf Number]
(check-expect (num-list "," "7,4,9,5") (list 7 4 9 5))

(define (num-list split s)
  (num-list/a split "" empty (explode s)))

; num-list/a: String String [ListOf Number] [ListOf String] -> [ListOf Number]
; *Accumulator*: current is the current number being processed
; *Accumulator*: nums is the current numbers found so far

(define (num-list/a split current nums lst)
  (cond [(empty? lst) (append nums (list (string->number current)))]
        [(string=? (first lst) split) (num-list/a split "" (append nums (list (string->number current))) (rest lst))]
        [else (num-list/a split (string-append (first lst) current) nums (rest lst))]))

(define ex-plays (num-list "," (first ex)))

; bingo-boards: [ListOf String] -> [ListOf [ListOf Number]]
(check-expect (bingo-boards (list "6 9" "4 2 0" "" "4 2 0" "6 9")) (list (list 6 9 4 2 0)
                                                                         (list 4 2 0 6 9)))
(define (bingo-boards lst)
  (bingo-boards/a empty empty lst))

; bingo-boards/a: [ListOf Number] [ListOf [ListOf Number]] [ListOf String] -> [ListOf [ListOf Number]]
; *Accumulator*: current is a ListOf current Numbers
; *Accumulator*: boards is the current boards
(define (bingo-boards/a current boards lst)
  (cond [(empty? lst) (cons current boards)]
        [(string=? (first lst) "") (bingo-boards/a empty (cons current boards) (rest lst))]
        [else (bingo-boards/a (append (num-list " " (first lst)) current) boards (rest lst))]))

